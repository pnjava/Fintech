version: "3.9"

services:
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: fintech
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  localstack:
    image: localstack/localstack:2.3
    environment:
      SERVICES: s3,sqs
      EDGE_PORT: 4566
      AWS_DEFAULT_REGION: us-east-1
    ports:
      - "4566:4566"
    volumes:
      - localstack_data:/var/lib/localstack

  zookeeper:
    image: bitnami/zookeeper:3.8
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"
    ports:
      - "2181:2181"
    volumes:
      - zookeeper_data:/bitnami

  kafka:
    image: bitnami/kafka:3.5
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9094
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CFG_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:9094
      ALLOW_PLAINTEXT_LISTENER: "yes"
    ports:
      - "9092:9092"
      - "9094:9094"
    volumes:
      - kafka_data:/bitnami

  otel-collector:
    image: otel/opentelemetry-collector:0.90.1
    command: ["--config=/etc/otel/collector-config.yaml"]
    volumes:
      - ./ops/otel/collector-config.yaml:/etc/otel/collector-config.yaml:ro
    ports:
      - "4317:4317"
      - "4318:4318"

  prometheus:
    image: prom/prometheus:v2.49.0
    volumes:
      - ./ops/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana:10.2.2
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.10.2
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data

  logstash:
    image: docker.elastic.co/logstash/logstash:8.10.2
    depends_on:
      - elasticsearch
    ports:
      - "5044:5044"
    volumes:
      - ./ops/elk/logstash.conf:/usr/share/logstash/pipeline/logstash.conf:ro

  kibana:
    image: docker.elastic.co/kibana/kibana:8.10.2
    depends_on:
      - elasticsearch
    ports:
      - "5601:5601"

  api:
    build:
      context: .
      dockerfile: Dockerfile
    command: uvicorn api.app.main:app --host 0.0.0.0 --port 8000 --reload
    environment:
      DATABASE_URL: postgresql+psycopg://postgres:postgres@db:5432/fintech
      AWS_REGION: us-east-1
    ports:
      - "8000:8000"
    depends_on:
      - db
      - kafka
      - localstack
    volumes:
      - ./.env.example:/app/.env:ro

  dividend-worker:
    build:
      context: .
      dockerfile: Dockerfile
    command: python -m workers.dividend_worker
    depends_on:
      - kafka
      - db
    volumes:
      - ./.env.example:/app/.env:ro

  upload-validator:
    build:
      context: .
      dockerfile: Dockerfile
    command: python -m workers.upload_validator
    depends_on:
      - kafka
      - db
    volumes:
      - ./.env.example:/app/.env:ro


volumes:
  postgres_data:
  localstack_data:
  zookeeper_data:
  kafka_data:
  grafana_data:
  elasticsearch_data:

