[build-system]
requires = ["setuptools>=65", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "fintech-platform"
version = "0.1.0"
description = "Fintech platform API and supporting services"
readme = "README.md"
authors = [
  { name = "Fintech Team" }
]
license = { text = "Proprietary" }
requires-python = ">=3.11"
dependencies = [
  "fastapi>=0.104.0",
  "uvicorn[standard]>=0.23.0",
  "sqlalchemy>=2.0.21",
  "alembic>=1.12.0",
  "pydantic>=2.0",
  "pydantic-settings>=2.0",
  "python-jose[cryptography]>=3.3.0",
  "passlib[bcrypt]>=1.7.4",
  "httpx>=0.24.0",
  "boto3>=1.28.0",
  "aioboto3>=12.0.0",
  "jsonschema>=4.19.0",
  "kafka-python>=2.0.2",
  "psycopg[binary]>=3.1.9",
  "prometheus-client>=0.17.0",
  "opentelemetry-api>=1.20.0",
  "opentelemetry-sdk>=1.20.0",
  "opentelemetry-exporter-otlp>=1.20.0",
  "opentelemetry-instrumentation-fastapi>=0.44b0",
  "opentelemetry-instrumentation-logging>=0.44b0",
  "opentelemetry-instrumentation-sqlalchemy>=0.44b0",
]

[project.optional-dependencies]
dev = [
  "black>=23.10.0",
  "isort>=5.12.0",
  "ruff>=0.1.4",
  "mypy>=1.6.0",
  "pytest>=7.4.0",
  "pytest-asyncio>=0.21.0",
  "pytest-cov>=4.1.0",
]

[tool.black]
line-length = 100
target-version = ["py311"]

[tool.isort]
profile = "black"
line_length = 100
known_first_party = ["api"]

[tool.ruff]
line-length = 100
select = ["E", "F", "I", "UP", "B"]
ignore = ["B008"]

[tool.mypy]
python_version = "3.11"
strict = true
plugins = ["pydantic.mypy"]
warn_unused_configs = true
warn_return_any = true
exclude = ["tests/"]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q"
asyncio_mode = "auto"

[tool.coverage.run]
branch = true
source = ["api"]

[tool.setuptools.packages.find]
where = ["."]
include = ["api*", "workers*"]

